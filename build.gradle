buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
        gradleDockerPluginVersion = '0.20.1'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerPluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.palantir.docker"

group = 'com.elalex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.postgresql:postgresql')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
    compile group: 'org.apache.poi', name: 'poi', version: '4.0.1'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.14'
    compile group: 'javax.mail', name: 'com.springsource.javax.mail', version: '1.4.5'
    compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.1.3.RELEASE'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    testCompile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
}

compileJava.options.encoding = 'UTF-8'

jar {
    doFirst {
        manifest {
            if (!configurations.compile.isEmpty()) {
                attributes(
                        'Class-Path': configurations.compile.collect { it.toURI().toString() }.join(' '),
                        'Main-Class': 'lcom.elalex.Application')
            }
        }
    }
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}